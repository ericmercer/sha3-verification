import "keccak_spec.cry"; 

keccak_module <- llvm_load_module "keccak.bc";  


// Helper function for allocating memory for symbolic variables
let alloc_init typ value = do {
    ptr <- crucible_alloc typ;
    crucible_points_to ptr (crucible_term value);
    return ptr;
};

let ptr_to_fresh name typ = do {
    x <- crucible_fresh_var name typ;
    xptr <- alloc_init typ x;
    return (x, xptr);
};


let squeeze_setup = do {
    (arr, arrp) <- ptr_to_fresh "array" (llvm_array 5 (llvm_array 5 (llvm_int 64)));
    (out, outp) <- ptr_to_fresh "out" (llvm_array 32 (llvm_int 8));
    
    crucible_execute_func [arrp, outp, crucible_term {{32:[64]}}, crucible_term {{1088:[64]}}];

    let res = crucible_term {{SHA3_squeeze arr}};
    crucible_points_to outp res;
};
squeeze_ov <- time (crucible_llvm_verify keccak_module "SHA3_squeeze" [] false squeeze_setup yices);


/*
let absorb_setup = do {
    (arr, arrp) <- ptr_to_fresh "array" (llvm_array 5 (llvm_array 5 (llvm_int 64)));
    (input, inp) <- ptr_to_fresh "input" (llvm_array 32 (llvm_int 8));
    len <- crucible_fresh_var "len" (llvm_int 64);
    r <- crucible_fresh_var "r" (llvm_int 64);

    crucible_execute_func [arrp, inp, crucible_term len, crucible_term r];
    let res = crucible_term {{SHA3_absorb input}};
    crucible_points_to arrp res;
};
absorb_ov <- time (crucible_llvm_verify keccak_module "SHA3_absorb" [keccak_ov] false absorb_setup yices);

*/



//Pi function comparison
let pi_setup = do {
    (arr, arrp) <- ptr_to_fresh "array" (llvm_array 5 (llvm_array 5 (llvm_int 64)));

    crucible_execute_func [arrp];

    let res = crucible_term {{ pi arr}};
    crucible_points_to arrp res;
};
pi_ov <- time (crucible_llvm_verify keccak_module "Pi" [] false pi_setup yices);


//Rho Function Comparison
let rho_setup = do {
    (arr, arrp) <- ptr_to_fresh "array" (llvm_array 5 (llvm_array 5 (llvm_int 64)));

    crucible_execute_func [arrp];

    let res = crucible_term {{ rho arr}};
    crucible_points_to arrp res;
};
rho_ov <- time (crucible_llvm_verify keccak_module "Rho" [] false rho_setup yices);



//Theta Function Comparison
let theta_setup = do {
    (arr, arrp) <- ptr_to_fresh "array" (llvm_array 5 (llvm_array 5 (llvm_int 64)));

    crucible_execute_func [arrp];

    let res = crucible_term {{ theta arr}};
    crucible_points_to arrp res;
};
theta_ov <- time (crucible_llvm_verify keccak_module "Theta" [] false theta_setup yices);


//Chi Function Comparison
let chi_setup = do {
    (arr, arrp) <- ptr_to_fresh "array" (llvm_array 5 (llvm_array 5 (llvm_int 64)));

    crucible_execute_func [arrp];

    let res = crucible_term {{ chi arr}};
    crucible_points_to arrp res;
};
chi_ov <- time (crucible_llvm_verify keccak_module "Chi" [] false chi_setup yices);



//Iota Function Comparison
let iota_setup = do {
    (arr, arrp) <- ptr_to_fresh "array" (llvm_array 5 (llvm_array 5 (llvm_int 64)));
    i <- crucible_fresh_var "i" (llvm_int 64);
    crucible_precond {{ i < 24 }};

    crucible_execute_func [arrp, crucible_term i];

    let res = crucible_term {{ iota arr i}};
    crucible_points_to arrp res;
};
iota_ov <- time (crucible_llvm_verify keccak_module "Iota" [] false iota_setup yices);

//Keccak Function Comparison
let keccak_setup = do {
    (arr, arrp) <- ptr_to_fresh "array" (llvm_array 5 (llvm_array 5 (llvm_int 64)));

    crucible_execute_func [arrp];

    let res = crucible_term {{ keccakp arr}};
    crucible_points_to arrp res;
};
keccak_ov <- time (crucible_llvm_verify keccak_module "KeccakF1600" [pi_ov, rho_ov, theta_ov, chi_ov, iota_ov] false keccak_setup yices);


let absorb_setup = do {
    (arr, arrp) <- ptr_to_fresh "array" (llvm_array 5 (llvm_array 5 (llvm_int 64)));
    (input, inp) <- ptr_to_fresh "input" (llvm_array 32 (llvm_int 8));
    len <- crucible_fresh_var "len" (llvm_int 64);
    r <- crucible_fresh_var "r" (llvm_int 64);

    crucible_execute_func [arrp, inp, len, r];
    let res = crucible_term {{SHA3_absorb input}};
    crucible_points_to arrp res;
};
absorb_ov <- time (crucible_llvm_verify keccak_module "SHA3_absorb" [/*keccak_ov*/] false absorb_setup yices);
/*
pi_ov <- time (crucible_llvm_verify keccak_module "Pi" [] false pi_setup yices);
rho_ov <- time (crucible_llvm_verify keccak_module "Rho" [] false rho_setup yices);
theta_ov <- time (crucible_llvm_verify keccak_module "Theta" [] false theta_setup yices);
chi_ov <- time (crucible_llvm_verify keccak_module "Chi" [] false chi_setup yices);
iota_ov <- time (crucible_llvm_verify keccak_module "Iota" [] false iota_setup yices);
keccak_ov <- time (crucible_llvm_verify keccak_module "KeccakF1600" [pi_ov, rho_ov, theta_ov, chi_ov, iota_ov] false keccak_setup yices);
*/
/*
pi_ov <- time (crucible_llvm_verify keccak_module "Pi" [] false pi_setup z3);
rho_ov <- time (crucible_llvm_verify keccak_module "Rho" [] false rho_setup z3);
theta_ov <- time (crucible_llvm_verify keccak_module "Theta" [] false theta_setup z3);
chi_ov <- time (crucible_llvm_verify keccak_module "Chi" [] false chi_setup z3);
iota_ov <- time (crucible_llvm_verify keccak_module "Iota" [] false iota_setup z3);
keccak_ov <- time (crucible_llvm_verify keccak_module "KeccakF1600" [pi_ov, rho_ov, theta_ov, chi_ov, iota_ov] false keccak_setup z3);
*/
/*
pi_ov <- time (crucible_llvm_verify keccak_module "Pi" [] false pi_setup abc);
rho_ov <- time (crucible_llvm_verify keccak_module "Rho" [] false rho_setup abc);
theta_ov <- time (crucible_llvm_verify keccak_module "Theta" [] false theta_setup abc);
chi_ov <- time (crucible_llvm_verify keccak_module "Chi" [] false chi_setup abc);
iota_ov <- time (crucible_llvm_verify keccak_module "Iota" [] false iota_setup abc);
keccak_ov <- time (crucible_llvm_verify keccak_module "KeccakF1600" [pi_ov, rho_ov, theta_ov, chi_ov, iota_ov] false keccak_setup abc);
*/