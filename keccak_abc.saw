import "keccak_spec.cry"; 

keccak_module <- llvm_load_module "keccak.bc";  


// Helper function for allocating memory for symbolic variables
let alloc_init typ value = do {
    ptr <- crucible_alloc typ;
    crucible_points_to ptr (crucible_term value);
    return ptr;
};

let ptr_to_fresh name typ = do {
    x <- crucible_fresh_var name typ;
    xptr <- alloc_init typ x;
    return (x, xptr);
};


//Pi function comparison
let pi_setup = do {
    (arr, arrp) <- ptr_to_fresh "array" (llvm_array 5 (llvm_array 5 (llvm_int 64)));

    crucible_execute_func [arrp];

    let res = crucible_term {{ pi arr}};
    crucible_points_to arrp res;
};
pi_ov <- time (crucible_llvm_verify keccak_module "Pi" [] false pi_setup abc);


//Rho Function Comparison
let rho_setup = do {
    (arr, arrp) <- ptr_to_fresh "array" (llvm_array 5 (llvm_array 5 (llvm_int 64)));

    crucible_execute_func [arrp];

    let res = crucible_term {{ rho arr}};
    crucible_points_to arrp res;
};
rho_ov <- time (crucible_llvm_verify keccak_module "Rho" [] false rho_setup abc);



//Theta Function Comparison
let theta_setup = do {
    (arr, arrp) <- ptr_to_fresh "array" (llvm_array 5 (llvm_array 5 (llvm_int 64)));

    crucible_execute_func [arrp];

    let res = crucible_term {{ theta arr}};
    crucible_points_to arrp res;
};
theta_ov <- time (crucible_llvm_verify keccak_module "Theta" [] false theta_setup abc);


//Chi Function Comparison
let chi_setup = do {
    (arr, arrp) <- ptr_to_fresh "array" (llvm_array 5 (llvm_array 5 (llvm_int 64)));

    crucible_execute_func [arrp];

    let res = crucible_term {{ chi arr}};
    crucible_points_to arrp res;
};
chi_ov <- time (crucible_llvm_verify keccak_module "Chi" [] false chi_setup abc);



//Iota Function Comparison
let iota_setup = do {
    (arr, arrp) <- ptr_to_fresh "array" (llvm_array 5 (llvm_array 5 (llvm_int 64)));
    i <- crucible_fresh_var "i" (llvm_int 64);
    crucible_precond {{ i < 24 }};

    crucible_execute_func [arrp, crucible_term i];

    let res = crucible_term {{ iota arr i}};
    crucible_points_to arrp res;
};
iota_ov <- time (crucible_llvm_verify keccak_module "Iota" [] false iota_setup abc);

//Keccak Function Comparison
let keccak_setup = do {
    (arr, arrp) <- ptr_to_fresh "array" (llvm_array 5 (llvm_array 5 (llvm_int 64)));

    crucible_execute_func [arrp];

    let res = crucible_term {{ keccakp arr}};
    crucible_points_to arrp res;
};
keccak_ov <- time (crucible_llvm_verify keccak_module "KeccakF1600" [pi_ov, rho_ov, theta_ov, chi_ov, iota_ov] false keccak_setup abc);